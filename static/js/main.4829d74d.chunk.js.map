{"version":3,"sources":["components/Loader/Loader.js","components/services/image-api.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/ImageErrorView/ImageErrorView.js","components/Modal/Modal.js","components/Button/Button.js","components/ImageInfo/ImageInfo.js","App.js","index.js"],"names":["ImageLoader","type","color","height","width","KEY","imageName","page","a","fetch","response","ok","json","Promise","reject","Error","fetchImage","Searchbar","onSubmit","useState","searchQuery","setSearchQuery","className","evt","preventDefault","autoComplete","autoFocus","placeholder","value","onChange","target","ImageGalleryItem","image","toggleModal","src","webformatURL","alt","tags","onClick","status","largeImageURL","ImageGallery","images","map","id","ImageErrorView","message","role","Modal","useEffect","window","addEventListener","checkEvent","removeEventListener","key","currentTarget","Button","App","setImages","setImageName","setPage","isLoading","setIsLoading","error","setError","targetImage","showModal","setShowModal","activeButton","setActiveButton","searchImages","then","data","total","current","hits","prevState","scrollTo","top","document","documentElement","scrollHeight","behavior","totalHits","length","catch","finally","ImageInfo","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4829d74d.chunk.js","sourcesContent":["import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\n export default function ImageLoader() {\r\n    return (\r\n      <Loader type=\"Bars\" color=\"#00BFFF\" height={80} width={80} />\r\n    );\r\n}","const KEY = '19027905-98233d65311b3fd13bc0a1406';\r\nasync function fetchImage(imageName, page) {\r\n    const response = await fetch(`https://pixabay.com/api/?q=${imageName}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`);\r\n    if (response.ok) {\r\n        return response.json();\r\n    }\r\n    return await Promise.reject(new Error(`No images`));\r\n}\r\n\r\nexport default fetchImage ;\r\n\r\n","import { useState } from 'react';\r\nimport { ImSearch } from 'react-icons/im';\r\n// import { toast } from 'react-toastify';\r\n// import 'react-toastify/dist/ReactToastify.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Searchbar = ({ onSubmit }) => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  const changeInput = evt => {\r\n    setSearchQuery(evt.target.value);\r\n  };\r\n\r\n  const handleSubmit = evt => {\r\n    evt.preventDefault();\r\n\r\n    onSubmit(searchQuery);\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n           <ImSearch />\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          value={searchQuery}\r\n          onChange={changeInput}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst ImageGalleryItem = ({ image, toggleModal }) => {\r\n  const onClick = () => {\r\n    toggleModal({\r\n      status: true,\r\n      src: image.largeImageURL,\r\n      alt: image.tags,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        className=\"ImageGalleryItemImage\"\r\n        src={image.webformatURL}\r\n        alt={image.tags}\r\n        onClick={onClick}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  image: PropTypes.object.isRequired,\r\n  toggleModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\n\r\n\r\nconst ImageGallery = ({ images, toggleModal }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map(image => (\r\n        <ImageGalleryItem\r\n          image={image}\r\n          key={image.id}\r\n          toggleModal={toggleModal}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  toggleModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;","import PropTypes from 'prop-types';\r\n\r\nfunction ImageErrorView({ message }) {\r\n  return (\r\n    <div role=\"alert\">\r\n      <p>Something went wrong. Error: {message}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nImageErrorView.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageErrorView;","import { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Modal = ({ src, alt, toggleModal }) => {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', checkEvent);\r\n    return () => {\r\n      window.removeEventListener('keydown', checkEvent);\r\n    };\r\n  });\r\n\r\n  const checkEvent = evt => {\r\n    if (evt.key === 'Escape' || evt.target === evt.currentTarget) {\r\n      toggleModal({ status: false });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Overlay\" onClick={checkEvent}>\r\n      <div className=\"Modal\">\r\n        <img  src={src} alt={alt} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n  toggleModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Modal;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    \r\n      <button type=\"button\" className=\"Button\" onClick={onClick}>\r\n        Load more\r\n      </button>\r\n    \r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;","import { useState, useEffect } from 'react';\r\nimport ImageLoader from '../Loader/Loader';\r\nimport fetchImage from '../services/image-api';\r\nimport Searchbar from '../Searchbar/Searchbar';\r\nimport ImageGallery from '../ImageGallery/ImageGallery';\r\nimport ImageErrorView from '../ImageErrorView/ImageErrorView';\r\nimport Modal from '../Modal/Modal';\r\nimport Button from '../Button/Button';\r\n\r\n\r\nconst App = () => {\r\n  const [images, setImages] = useState([]);\r\n  const [imageName, setImageName] = useState('');\r\n  const [page, setPage] = useState(1);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState({ status: false, message: '' });\r\n  const [showModal, setShowModal] = useState({\r\n    status: false,\r\n    targetImage: null,\r\n  });\r\n  const [activeButton, setActiveButton] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setPage(1);\r\n    searchImages(imageName, 1);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [imageName]);\r\n\r\n  function searchImages(searchQuery, page) {\r\n    if (searchQuery === '') {\r\n      setImages([]);\r\n      setActiveButton(false);\r\n      setError({ status: true, message: 'Please input search request' });\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setError({ status: false, message: '' });\r\n\r\n    fetchImage(searchQuery, page)\r\n      .then(data => {\r\n        if (page === 1) {\r\n          setImages(data.hits);\r\n        } else {\r\n          setImages(prevState => [...prevState, ...data.hits]);\r\n          window.scrollTo({\r\n            top: document.documentElement.scrollHeight,\r\n            behavior: 'smooth',\r\n          });\r\n        }\r\n\r\n        checkButtonAndNotify(data.totalHits, images.length + data.hits.length);\r\n        setPage(prevState => prevState + 1);\r\n      })\r\n      .catch(error =>\r\n        setError({\r\n          status: true,\r\n          message: `Something wrong: ${error.message}`,\r\n        }),\r\n      )\r\n      .finally(() => setIsLoading(false));\r\n  }\r\n\r\n  function checkButtonAndNotify(total, current) {\r\n    setActiveButton(total > current ? true : false);\r\n\r\n    setError(\r\n      !total\r\n        ? { status: true, message: 'Nothing was found. Try again.' }\r\n        : { status: false, message: '' },\r\n    );\r\n  }\r\n\r\n  const toggleModal = ({ status, src, alt }) => {\r\n    setShowModal(\r\n      status\r\n        ? { status: true, targetImage: { src, alt } }\r\n        : { status: false, targetImage: null },\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Searchbar onSubmit={setImageName} />\r\n      {error.status && <ImageErrorView message={error.message} />}\r\n      {isLoading && (\r\n        <ImageLoader/>\r\n      )}\r\n      {images.length > 0 && (\r\n        <ImageGallery images={images} toggleModal={toggleModal} />\r\n      )}\r\n      {showModal.status && (\r\n        <Modal\r\n          src={showModal.targetImage.src}\r\n          alt={showModal.targetImage.alt}\r\n          toggleModal={toggleModal}\r\n        />\r\n      )}\r\n      {activeButton && <Button onClick={() => searchImages(imageName, page)} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","import { useState } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport ImageInfo from './components/ImageInfo';\r\n\r\nexport default function App() {\r\n    const [imageName] = useState('');\r\n\r\n        return (\r\n            <>\r\n                <ImageInfo imageName={imageName} />\r\n                <ToastContainer autoClose={2000} />\r\n            </>\r\n        );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// const elem1 = <span>Привет</span>;\n// const elem2 = <span>мир</span>;\n\n// const element = (\n//   <div>\n//     {elem1}\n//     {elem2}\n//   </div>\n// );\n// console.log(element);\n\n// ReactDOM.render(element, document.querySelector(\"#root\"));\n"],"sourceRoot":""}